# cap = cv2.VideoCapture(0)

# while True:
#     # Capture frame-by-frame
#     ret, frame = cap.read()

#     # Display the resulting frame
#     cv2.imshow('frame', frame)

#     # Press 'q' to quit
#     if cv2.waitKey(1) & 0xFF == ord('q'):
#         break

# # When everything done, release the capture
# cap.release()
# cv2.destroyAllWindows()
# face_cascade = cv2.CascadeClassifier(r'c:\Users\cookie\personalProjects\opencv\data\haarcascade\haarcascade_frontalface_default.xml') 
# eye_cascade = cv2.CascadeClassifier(r'c:\Users\cookie\personalProjects\opencv\data\haarcascade\haarcascade_eye.xml')  
# cap = cv2.VideoCapture(0)
# while True:  
#     ret, img = cap.read()  
#     gray_img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY) 
#     faces = face_cascade.detectMultiScale(gray_img, 1.25, 4) 
  
#     for (x,y,w,h) in faces: 
#         cv2.rectangle(img,(x,y),(x+w,y+h),(255,255,0),2)  
#         rec_gray = gray_img[y:y+h, x:x+w] 
#         rec_color = img[y:y+h, x:x+w] 
  
#         eyes = eye_cascade.detectMultiScale(rec_gray)  
  
#         for (x,y,w,h) in eyes:
#             cv2.rectangle(rec_color,(x,y),(x+w,y+h),(0,127,255),2)
  
#     cv2.imshow('Face Recognition',img) 
  
#     k = cv2.waitKey(30) & 0xff
#     if k == 27: 
#         break
  
# cap.release() 
# cv2.destroyAllWindows()